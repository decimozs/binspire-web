/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as DashboardRouteRouteImport } from './routes/dashboard/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as DashboardMapRouteImport } from './routes/dashboard/map'
import { Route as AuthResetPasswordRouteImport } from './routes/auth/reset-password'
import { Route as AuthRequestAccessRouteImport } from './routes/auth/request-access'
import { Route as AuthEmailVerificationRouteImport } from './routes/auth/email-verification'
import { Route as AuthCreateAccountRouteImport } from './routes/auth/create-account'

const DashboardRouteRoute = DashboardRouteRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardMapRoute = DashboardMapRouteImport.update({
  id: '/map',
  path: '/map',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const AuthResetPasswordRoute = AuthResetPasswordRouteImport.update({
  id: '/auth/reset-password',
  path: '/auth/reset-password',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRequestAccessRoute = AuthRequestAccessRouteImport.update({
  id: '/auth/request-access',
  path: '/auth/request-access',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthEmailVerificationRoute = AuthEmailVerificationRouteImport.update({
  id: '/auth/email-verification',
  path: '/auth/email-verification',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthCreateAccountRoute = AuthCreateAccountRouteImport.update({
  id: '/auth/create-account',
  path: '/auth/create-account',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/auth/create-account': typeof AuthCreateAccountRoute
  '/auth/email-verification': typeof AuthEmailVerificationRoute
  '/auth/request-access': typeof AuthRequestAccessRoute
  '/auth/reset-password': typeof AuthResetPasswordRoute
  '/dashboard/map': typeof DashboardMapRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/auth/create-account': typeof AuthCreateAccountRoute
  '/auth/email-verification': typeof AuthEmailVerificationRoute
  '/auth/request-access': typeof AuthRequestAccessRoute
  '/auth/reset-password': typeof AuthResetPasswordRoute
  '/dashboard/map': typeof DashboardMapRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/auth/create-account': typeof AuthCreateAccountRoute
  '/auth/email-verification': typeof AuthEmailVerificationRoute
  '/auth/request-access': typeof AuthRequestAccessRoute
  '/auth/reset-password': typeof AuthResetPasswordRoute
  '/dashboard/map': typeof DashboardMapRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/auth/create-account'
    | '/auth/email-verification'
    | '/auth/request-access'
    | '/auth/reset-password'
    | '/dashboard/map'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dashboard'
    | '/auth/create-account'
    | '/auth/email-verification'
    | '/auth/request-access'
    | '/auth/reset-password'
    | '/dashboard/map'
  id:
    | '__root__'
    | '/'
    | '/dashboard'
    | '/auth/create-account'
    | '/auth/email-verification'
    | '/auth/request-access'
    | '/auth/reset-password'
    | '/dashboard/map'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRouteRoute: typeof DashboardRouteRouteWithChildren
  AuthCreateAccountRoute: typeof AuthCreateAccountRoute
  AuthEmailVerificationRoute: typeof AuthEmailVerificationRoute
  AuthRequestAccessRoute: typeof AuthRequestAccessRoute
  AuthResetPasswordRoute: typeof AuthResetPasswordRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/map': {
      id: '/dashboard/map'
      path: '/map'
      fullPath: '/dashboard/map'
      preLoaderRoute: typeof DashboardMapRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/auth/reset-password': {
      id: '/auth/reset-password'
      path: '/auth/reset-password'
      fullPath: '/auth/reset-password'
      preLoaderRoute: typeof AuthResetPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/request-access': {
      id: '/auth/request-access'
      path: '/auth/request-access'
      fullPath: '/auth/request-access'
      preLoaderRoute: typeof AuthRequestAccessRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/email-verification': {
      id: '/auth/email-verification'
      path: '/auth/email-verification'
      fullPath: '/auth/email-verification'
      preLoaderRoute: typeof AuthEmailVerificationRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/create-account': {
      id: '/auth/create-account'
      path: '/auth/create-account'
      fullPath: '/auth/create-account'
      preLoaderRoute: typeof AuthCreateAccountRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

interface DashboardRouteRouteChildren {
  DashboardMapRoute: typeof DashboardMapRoute
}

const DashboardRouteRouteChildren: DashboardRouteRouteChildren = {
  DashboardMapRoute: DashboardMapRoute,
}

const DashboardRouteRouteWithChildren = DashboardRouteRoute._addFileChildren(
  DashboardRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRouteRoute: DashboardRouteRouteWithChildren,
  AuthCreateAccountRoute: AuthCreateAccountRoute,
  AuthEmailVerificationRoute: AuthEmailVerificationRoute,
  AuthRequestAccessRoute: AuthRequestAccessRoute,
  AuthResetPasswordRoute: AuthResetPasswordRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
